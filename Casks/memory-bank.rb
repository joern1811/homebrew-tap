# This file was generated by GoReleaser. DO NOT EDIT.
cask "memory-bank" do
  desc "Semantic memory management system for Claude Code using hexagonal architecture"
  homepage "https://github.com/joern1811/memory-bank"
  version "1.14.0"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "memory-bank"

  on_macos do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.14.0/memory-bank_1.14.0_darwin_amd64.tar.gz"
      sha256 "3f5809fc44c89e9bb3aef82daa48fc73247a4dcb12071dfb691ce80e9d47fd31"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.14.0/memory-bank_1.14.0_darwin_arm64.tar.gz"
      sha256 "4eb079ff86fd69c41c287fee891dff3ec0fedc9add87c7cf2aabca09a2021862"
    end
  end

  on_linux do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.14.0/memory-bank_1.14.0_linux_amd64.tar.gz"
      sha256 "9fe550a29506366d268f426953cbbacf45dbd23512370678a83690bb0945bafc"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.14.0/memory-bank_1.14.0_linux_arm64.tar.gz"
      sha256 "f5706278626a8e910953e4feb513b1ede5ce28fb08fc69d3c3559447b2ab677a"
    end
  end

  postflight do
    system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/memory-bank"]
    system "#{staged_path}/memory-bank completion bash > #{HOMEBREW_PREFIX}/etc/bash_completion.d/memory-bank"
    system "#{staged_path}/memory-bank completion zsh > #{HOMEBREW_PREFIX}/share/zsh/site-functions/_memory-bank"
    system "#{staged_path}/memory-bank completion fish > #{HOMEBREW_PREFIX}/share/fish/vendor_completions.d/memory-bank.fish"
  end

  caveats do
    "Memory Bank works out-of-the-box with mock providers, but for enhanced performance, "
    "consider installing these optional services:"
    ""
    "For local embedding generation:"
    "  brew install ollama"
    "  ollama pull nomic-embed-text"
    ""
    "For vector search performance:"
    "  # Option 1: Python package"
    "  pip install chromadb"
    ""
    "  # Option 2: uvx (no installation needed)"
    "  uvx --from 'chromadb[server]' chroma run --host localhost --port 8000"
    ""
    "  # Option 3: Docker"
    "  docker run -p 8000:8000 chromadb/chroma"
    ""
    "Start Memory Bank MCP server:"
    "  memory-bank"
  end

  # No zap stanza required
end
