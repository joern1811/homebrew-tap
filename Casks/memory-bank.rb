# This file was generated by GoReleaser. DO NOT EDIT.
cask "memory-bank" do
  desc "Semantic memory management system for Claude Code using hexagonal architecture"
  homepage "https://github.com/joern1811/memory-bank"
  version "1.12.4"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "memory-bank"

  on_macos do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.4/memory-bank_1.12.4_darwin_amd64.tar.gz"
      sha256 "e18f04a35aad3582609363580dfe85264a932ddeafa769bc8b09a2e94d122f23"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.4/memory-bank_1.12.4_darwin_arm64.tar.gz"
      sha256 "934354bdef290f5f7ce5d4904a2989dea9505bb9ee20c62368aff9d8622946d0"
    end
  end

  on_linux do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.4/memory-bank_1.12.4_linux_amd64.tar.gz"
      sha256 "873f3ed02d5fd879851fac5cc1adb5dba53556941654cc74b6b372a967b8a802"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.4/memory-bank_1.12.4_linux_arm64.tar.gz"
      sha256 "5c6ef9a168ce89b6bea68d82b3db2cdfcb0b27ca1804d98a18aa0f91bc98035b"
    end
  end

  postflight do
    system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/memory-bank"]
    system "#{staged_path}/memory-bank completion bash > #{HOMEBREW_PREFIX}/etc/bash_completion.d/memory-bank"
    system "#{staged_path}/memory-bank completion zsh > #{HOMEBREW_PREFIX}/share/zsh/site-functions/_memory-bank"
    system "#{staged_path}/memory-bank completion fish > #{HOMEBREW_PREFIX}/share/fish/vendor_completions.d/memory-bank.fish"
  end

  caveats do
    "Memory Bank works out-of-the-box with mock providers, but for enhanced performance, "
    "consider installing these optional services:"
    ""
    "For local embedding generation:"
    "  brew install ollama"
    "  ollama pull nomic-embed-text"
    ""
    "For vector search performance:"
    "  # Option 1: Python package"
    "  pip install chromadb"
    ""
    "  # Option 2: uvx (no installation needed)"
    "  uvx --from 'chromadb[server]' chroma run --host localhost --port 8000"
    ""
    "  # Option 3: Docker"
    "  docker run -p 8000:8000 chromadb/chroma"
    ""
    "Start Memory Bank MCP server:"
    "  memory-bank"
  end

  # No zap stanza required
end
