# This file was generated by GoReleaser. DO NOT EDIT.
cask "memory-bank" do
  desc "Semantic memory management system for Claude Code using hexagonal architecture"
  homepage "https://github.com/joern1811/memory-bank"
  version "1.12.7"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "memory-bank"

  on_macos do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.7/memory-bank_1.12.7_darwin_amd64.tar.gz"
      sha256 "cf3f2b3a28cf5795ebbe6f6eb34a555c09c5c0ce45c93cebbc8809fef3eb75b3"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.7/memory-bank_1.12.7_darwin_arm64.tar.gz"
      sha256 "258c8c2c934c31bf755ad3919ef81069b1edf7e47aba13c7fc73a6f4b173c2c7"
    end
  end

  on_linux do
    on_intel do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.7/memory-bank_1.12.7_linux_amd64.tar.gz"
      sha256 "793689705c3cc7c18914a8df976b419a00920b4e91a18df4a5db279b61c59f91"
    end
    on_arm do
      url "https://github.com/joern1811/memory-bank/releases/download/v1.12.7/memory-bank_1.12.7_linux_arm64.tar.gz"
      sha256 "6c9a0e2ad10431a112419e7b961b44d4077b10f15a210b41283de857bb1cf38f"
    end
  end

  postflight do
    system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/memory-bank"]
    system "#{staged_path}/memory-bank completion bash > #{HOMEBREW_PREFIX}/etc/bash_completion.d/memory-bank"
    system "#{staged_path}/memory-bank completion zsh > #{HOMEBREW_PREFIX}/share/zsh/site-functions/_memory-bank"
    system "#{staged_path}/memory-bank completion fish > #{HOMEBREW_PREFIX}/share/fish/vendor_completions.d/memory-bank.fish"
  end

  caveats do
    "Memory Bank works out-of-the-box with mock providers, but for enhanced performance, "
    "consider installing these optional services:"
    ""
    "For local embedding generation:"
    "  brew install ollama"
    "  ollama pull nomic-embed-text"
    ""
    "For vector search performance:"
    "  # Option 1: Python package"
    "  pip install chromadb"
    ""
    "  # Option 2: uvx (no installation needed)"
    "  uvx --from 'chromadb[server]' chroma run --host localhost --port 8000"
    ""
    "  # Option 3: Docker"
    "  docker run -p 8000:8000 chromadb/chroma"
    ""
    "Start Memory Bank MCP server:"
    "  memory-bank"
  end

  # No zap stanza required
end
